apiVersion: v1
kind: Namespace
metadata:
  name: rs-spring

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: rs-spring
type: Opaque
data:
  password: ${DATABASE_PASSWORD}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: rs-spring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: rs-spring
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "eventdb"
            - name: POSTGRES_USER
              value: "eventuser"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: rs-spring
spec:
  selector:
    app: postgresql
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      name: postgresql

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: rs-spring
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672  # RabbitMQ server port
            - containerPort: 15672 # RabbitMQ management UI port

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: rs-spring
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 5672
      targetPort: 5672
      name: amqp
    - protocol: TCP
      port: 15672
      targetPort: 15672
      name: management

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app
  namespace: rs-spring
  labels:
    app: spring-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-app
  template:
    metadata:
      labels:
        app: spring-app
    spec:
      containers:
        - name: spring-app
          image: localhost:5000/rabbitmq-springboot:latest
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgresql-service:5432/eventdb"
            - name: SPRING_DATASOURCE_USERNAME
              value: "eventuser"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: SPRING_RABBITMQ_HOST
              value: "rabbitmq-service"
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_USERNAME
              value: ${RABBITMQ_USER}
            - name: SPRING_RABBITMQ_PASSWORD
              value: ${RABBITMQ_PASSWORD}

---
apiVersion: v1
kind: Service
metadata:
  name: spring-app-service
  namespace: rs-spring
spec:
  selector:
    app: spring-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080  # Porta fixa (opcional)
  type: LoadBalancer
